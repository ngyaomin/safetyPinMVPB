'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _routes = require('../routes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/yaomin/distributedInsuranceMVPB/components/Footer.js';


var style = {
  borderTop: "1px solid #E7E7E7",
  padding: "0px",
  position: "fixed",
  left: "0",
  bottom: "50px",
  height: "0px",
  width: "100%"
};

var ThisComponent = function (_Component) {
  (0, _inherits3.default)(ThisComponent, _Component);

  function ThisComponent() {
    (0, _classCallCheck3.default)(this, ThisComponent);

    return (0, _possibleConstructorReturn3.default)(this, (ThisComponent.__proto__ || (0, _getPrototypeOf2.default)(ThisComponent)).apply(this, arguments));
  }

  (0, _createClass3.default)(ThisComponent, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement('div', { style: style, __source: {
          fileName: _jsxFileName,
          lineNumber: 18
        }
      }, _react2.default.createElement(_semanticUiReact.Menu, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 19
        }
      }, _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 20
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://github.com/ngyaomin/distributedInsurance1n2', __source: {
          fileName: _jsxFileName,
          lineNumber: 21
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 22
        }
      }, _react2.default.createElement('i', { 'class': 'github icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 23
        }
      }), 'GitHub Depository for this project'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 28
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://github.com/ngyaomin/safetyPinIPFS', __source: {
          fileName: _jsxFileName,
          lineNumber: 29
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 30
        }
      }, _react2.default.createElement('i', { 'class': 'github icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 31
        }
      }), 'Safety Pin IPFS GitHub'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 36
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://drive.google.com/file/d/1_d3yFTCR20hL_GiWs1Zf45bnTTt1uENl/view?usp=sharing', __source: {
          fileName: _jsxFileName,
          lineNumber: 37
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 38
        }
      }, _react2.default.createElement('i', { 'class': 'google drive icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 39
        }
      }), 'Link to PowerPoint Presentation on Google Drive'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 44
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://ipfs.infura.io/ipfs/QmPjkaAcAp3Hy7YBAkqgEWzcCLxFKePYJVaHHkuqeaT9bi', __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 46
        }
      }, _react2.default.createElement('i', { 'class': 'download icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 47
        }
      }), 'Download PowerPoint Presentation on IPFS'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'right', __source: {
          fileName: _jsxFileName,
          lineNumber: 52
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://www.linkedin.com/in/ngyaomin/', __source: {
          fileName: _jsxFileName,
          lineNumber: 53
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 54
        }
      }, _react2.default.createElement('i', { 'class': 'linkedin icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 55
        }
      }), 'My linkedin Profile')))));
    }
  }]);

  return ThisComponent;
}(_react.Component);

exports.default = ThisComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwic3R5bGUiLCJib3JkZXJUb3AiLCJwYWRkaW5nIiwicG9zaXRpb24iLCJsZWZ0IiwiYm90dG9tIiwiaGVpZ2h0Iiwid2lkdGgiLCJUaGlzQ29tcG9uZW50IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJNZW51Iiwicm91dGUiLCJjbGFzc05hbWUiLCJ0YXJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBSEEsSUFBSUEsZUFBZSw2REFBbkI7OztBQUtBLElBQUlDLFFBQVE7QUFDVkMsYUFBVyxtQkFERDtBQUVWQyxXQUFTLEtBRkM7QUFHVkMsWUFBVSxPQUhBO0FBSVZDLFFBQU0sR0FKSTtBQUtWQyxVQUFRLE1BTEU7QUFNVkMsVUFBUSxLQU5FO0FBT1ZDLFNBQU87QUFQRyxDQUFaOztBQVVBLElBQUlDLGdCQUFnQixVQUFVQyxVQUFWLEVBQXNCO0FBQ3hDLDBCQUFVRCxhQUFWLEVBQXlCQyxVQUF6Qjs7QUFFQSxXQUFTRCxhQUFULEdBQXlCO0FBQ3ZCLGtDQUFnQixJQUFoQixFQUFzQkEsYUFBdEI7O0FBRUEsV0FBTyx5Q0FBMkIsSUFBM0IsRUFBaUMsQ0FBQ0EsY0FBY0UsU0FBZCxJQUEyQiw4QkFBdUJGLGFBQXZCLENBQTVCLEVBQW1FRyxLQUFuRSxDQUF5RSxJQUF6RSxFQUErRUMsU0FBL0UsQ0FBakMsQ0FBUDtBQUNEOztBQUVELDZCQUFhSixhQUFiLEVBQTRCLENBQUM7QUFDM0JLLFNBQUssUUFEc0I7QUFFM0JDLFdBQU8sU0FBU0MsTUFBVCxHQUFrQjtBQUN2QixhQUFPLGdCQUFNQyxhQUFOLENBQ0wsS0FE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