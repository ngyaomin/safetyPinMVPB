'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _routes = require('../routes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/yaomin/distributedInsuranceMVPB/components/Footer.js';


var style = {
  borderTop: "1px solid #E7E7E7",
  padding: "0px",
  position: "fixed",
  left: "0",
  bottom: "50px",
  height: "0px",
  width: "100%",
  marginTop: "100px"
};

var ThisComponent = function (_Component) {
  (0, _inherits3.default)(ThisComponent, _Component);

  function ThisComponent() {
    (0, _classCallCheck3.default)(this, ThisComponent);

    return (0, _possibleConstructorReturn3.default)(this, (ThisComponent.__proto__ || (0, _getPrototypeOf2.default)(ThisComponent)).apply(this, arguments));
  }

  (0, _createClass3.default)(ThisComponent, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement('div', { style: style, __source: {
          fileName: _jsxFileName,
          lineNumber: 19
        }
      }, _react2.default.createElement(_semanticUiReact.Menu, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 20
        }
      }, _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 21
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://github.com/ngyaomin/distributedInsurance1n2', __source: {
          fileName: _jsxFileName,
          lineNumber: 22
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 23
        }
      }, _react2.default.createElement('i', { 'class': 'github icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 24
        }
      }), 'GitHub Depository for this project'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 29
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://github.com/ngyaomin/safetyPinIPFS', __source: {
          fileName: _jsxFileName,
          lineNumber: 30
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 31
        }
      }, _react2.default.createElement('i', { 'class': 'github icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 32
        }
      }), 'Safety Pin IPFS GitHub'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 37
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://drive.google.com/file/d/1_d3yFTCR20hL_GiWs1Zf45bnTTt1uENl/view?usp=sharing', __source: {
          fileName: _jsxFileName,
          lineNumber: 38
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 39
        }
      }, _react2.default.createElement('i', { 'class': 'google drive icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 40
        }
      }), 'Link to PowerPoint Presentation on Google Drive'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'left', __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://ipfs.infura.io/ipfs/QmRy77eyfhvkLL5pK8fG697angnGJvKNA3eZhHu7HREML6', __source: {
          fileName: _jsxFileName,
          lineNumber: 46
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 47
        }
      }, _react2.default.createElement('i', { 'class': 'download icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 48
        }
      }), 'Download PowerPoint Presentation on IPFS'))), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: 'right', __source: {
          fileName: _jsxFileName,
          lineNumber: 53
        }
      }, _react2.default.createElement(_routes.Link, { route: 'https://www.linkedin.com/in/ngyaomin/', __source: {
          fileName: _jsxFileName,
          lineNumber: 54
        }
      }, _react2.default.createElement('a', { className: 'item', target: '_blank', __source: {
          fileName: _jsxFileName,
          lineNumber: 55
        }
      }, _react2.default.createElement('i', { 'class': 'linkedin icon', __source: {
          fileName: _jsxFileName,
          lineNumber: 56
        }
      }), 'My linkedin Profile')))));
    }
  }]);

  return ThisComponent;
}(_react.Component);

exports.default = ThisComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwic3R5bGUiLCJib3JkZXJUb3AiLCJwYWRkaW5nIiwicG9zaXRpb24iLCJsZWZ0IiwiYm90dG9tIiwiaGVpZ2h0Iiwid2lkdGgiLCJtYXJnaW5Ub3AiLCJUaGlzQ29tcG9uZW50IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJNZW51Iiwicm91dGUiLCJjbGFzc05hbWUiLCJ0YXJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBSEEsSUFBSUEsZUFBZSw2REFBbkI7OztBQUtBLElBQUlDLFFBQVE7QUFDVkMsYUFBVyxtQkFERDtBQUVWQyxXQUFTLEtBRkM7QUFHVkMsWUFBVSxPQUhBO0FBSVZDLFFBQU0sR0FKSTtBQUtWQyxVQUFRLE1BTEU7QUFNVkMsVUFBUSxLQU5FO0FBT1ZDLFNBQU8sTUFQRztBQVFWQyxhQUFXO0FBUkQsQ0FBWjs7QUFXQSxJQUFJQyxnQkFBZ0IsVUFBVUMsVUFBVixFQUFzQjtBQUN4QywwQkFBVUQsYUFBVixFQUF5QkMsVUFBekI7O0FBRUEsV0FBU0QsYUFBVCxHQUF5QjtBQUN2QixrQ0FBZ0IsSUFBaEIsRUFBc0JBLGFBQXRCOztBQUVBLFdBQU8seUNBQTJCLElBQTNCLEVBQWlDLENBQUNBLGNBQWNFLFNBQWQsSUFBMkIsOEJBQXVCRixhQUF2QixDQUE1QixFQUFtRUcsS0FBbkUsQ0FBeUUsSUFBekUsRUFBK0VDLFNBQS9FLENBQWpDLENBQVA7QUFDRDs7QUFFRCw2QkFBYUosYUFBYixFQUE0QixDQUFDO0FBQzNCSyxTQUFLLFFBRHNCO0FBRTNCQyxXQUFPLFNBQVNDLE1BQVQsR0FBa0I7QUFD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