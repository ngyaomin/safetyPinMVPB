import createUploadQueue from "./queue";
import createItemsSender from "./batchItemsSender";
import createBatch from "./batch";
export default (function (trigger, cancellable, options, uploaderId) {
  var sender = createItemsSender(),
      queue = createUploadQueue(options, trigger, cancellable, sender, uploaderId);
  var runCancellable = queue.runCancellable;
  return {
    process: function process(batch, batchOptions) {
      queue.uploadBatch(batch, batchOptions);
    },
    abortBatch: function abortBatch(batchId) {
      queue.abortBatch(batchId);
    },
    abort: function abort(id) {
      if (id) {
        queue.abortItem(id);
      } else {
        queue.abortAll();
      }
    },
    addNewBatch: function addNewBatch(files, uploaderId, processOptions) {
      var batch = createBatch(files, uploaderId, processOptions);
      return queue.addBatch(batch, processOptions);
    },
    runCancellable: runCancellable
  };
});