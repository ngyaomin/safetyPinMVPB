"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _shared = require("@rpldy/shared");

var _sharedUi = require("@rpldy/shared-ui");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var NO_CONTAINER_ERROR_MSG = "Uploady - Container for file input must be a valid dom element";

var renderInput = function (inputProps, instanceOptions, ref) {
  return /*#__PURE__*/_react["default"].createElement("input", _extends({}, inputProps, {
    name: instanceOptions.inputFieldName,
    type: "file",
    ref: ref
  }));
};

var renderInPortal = function (container, isValidContainer, inputProps, instanceOptions, ref) {
  return container && isValidContainer ? /*#__PURE__*/_reactDom["default"].createPortal(renderInput(inputProps, instanceOptions, ref), container) : null;
};

var FileInputField = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var container = _ref.container,
      noPortal = _ref.noPortal,
      inputProps = _objectWithoutProperties(_ref, ["container", "noPortal"]);

  var instanceOptions = (0, _sharedUi.useUploadOptions)();
  var isValidContainer = container && container.nodeType === 1;
  (0, _shared.invariant)(isValidContainer || !(0, _shared.hasWindow)(), NO_CONTAINER_ERROR_MSG); // In DEV - SSR React will warn on mismatch between client&server :( -
  // https://github.com/facebook/react/issues/12615
  // https://github.com/facebook/react/issues/13097

  return noPortal ? renderInput(inputProps, instanceOptions, ref) : renderInPortal(container, isValidContainer, inputProps, instanceOptions, ref);
}));

var Uploady = function (props) {
  var _props$multiple = props.multiple,
      multiple = _props$multiple === void 0 ? true : _props$multiple,
      capture = props.capture,
      accept = props.accept,
      webkitdirectory = props.webkitdirectory,
      children = props.children,
      inputFieldContainer = props.inputFieldContainer,
      customInput = props.customInput,
      fileInputId = props.fileInputId,
      _props$noPortal = props.noPortal,
      noPortal = _props$noPortal === void 0 ? false : _props$noPortal,
      noDomProps = _objectWithoutProperties(props, ["multiple", "capture", "accept", "webkitdirectory", "children", "inputFieldContainer", "customInput", "fileInputId", "noPortal"]);

  var container = !customInput ? inputFieldContainer || ((0, _shared.hasWindow)() ? document.body : null) : null;
  var internalInputFieldRef = (0, _react.useRef)();
  return /*#__PURE__*/_react["default"].createElement(_sharedUi.NoDomUploady, _extends({}, noDomProps, {
    inputRef: internalInputFieldRef
  }), !customInput ? /*#__PURE__*/_react["default"].createElement(FileInputField, {
    container: container,
    multiple: multiple,
    capture: capture,
    accept: accept,
    webkitdirectory: webkitdirectory,
    style: {
      display: "none"
    },
    ref: internalInputFieldRef,
    id: fileInputId,
    noPortal: noPortal
  }) : null, children);
};

var _default = Uploady;
exports["default"] = _default;